@using System.Drawing
@using DevExpress.Data.Svg
@model EInvoice.Web.Models.InvoiceViewModel
@Html.DevExpress().FormLayout(settings => {
	settings.ControlStyle.BackColor = Color.White;
	settings.Name = "formLayout";
	settings.ControlStyle.CssClass = "formDB";

	settings.UseDefaultPaddings = false;
	settings.AlignItemCaptionsInAllGroups = true;
	settings.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
	settings.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 600;
	settings.Items.AddEmptyItem();
	settings.Items.AddGroupItem(d =>

	{
		d.Caption = "Invoice Information";
		d.ColumnCount = 3;
		d.RowSpan = 2;

		d.Items.AddGroupItem(c =>
		{
			c.Caption = "Customer Information";
			c.ColCount = 2;
			c.RowSpan = 2;
			c.Items.Add(m => m.CustomerCode, i =>
			{
				i.NestedExtension().TextBox(tb =>
				{
					tb.Width = Unit.Percentage(100);
					tb.ShowModelErrors = true;
					tb.Properties.ValidationSettings.Display = Display.Dynamic;
					tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
				});
			});
			c.Items.Add(m => m.Purchaser, i =>
			{
				i.RowSpan = 2;
				i.NestedExtension().TextBox(tb =>
				{
					tb.Width = Unit.Percentage(100);
					tb.ShowModelErrors = true;
					tb.Properties.ValidationSettings.Display = Display.Dynamic;
					tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
				});
			});
			c.Items.Add(m => m.CustomerTaxCode, i =>
			{
				i.Caption = "Tax Code";
				i.NestedExtension().TextBox(tb =>
				{
					tb.Width = Unit.Percentage(100);
					tb.ShowModelErrors = true;
					tb.Properties.ValidationSettings.Display = Display.Dynamic;
					tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
				});
			});
			c.Items.Add(m => m.CustomerEmail, i =>
			{
				i.Caption = "Email";
				i.NestedExtension().TextBox(tb =>
				{
					tb.Width = Unit.Percentage(100);
					tb.ShowModelErrors = true;
					tb.Properties.ValidationSettings.Display = Display.Dynamic;
					tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
				});
			});
			c.Items.Add(m => m.CustomerName, i =>
			{
				i.Caption = "Name";
				i.Width = Unit.Percentage(100);
				i.NestedExtension().TextBox(tb =>
				{
					tb.Width = Unit.Percentage(100);
					tb.ShowModelErrors = true;
					tb.Properties.ValidationSettings.Display = Display.Dynamic;
					tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
				});
			});
			c.Items.Add(m => m.CustomerAddress, i =>
			{
				i.Width = Unit.Percentage(100);
				i.Caption = "Address";
				i.NestedExtension().TextBox(tb =>
				{
					tb.Width = Unit.Percentage(100);
					tb.ShowModelErrors = true;
					tb.Properties.ValidationSettings.Display = Display.Dynamic;
					tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
				});
			});
			c.Items.Add(m => m.CustomerPhone, i =>
			{
				i.Caption = "Phone";
				i.NestedExtension().TextBox(tb =>
				{
					tb.Width = Unit.Percentage(100);
					tb.ShowModelErrors = true;
					tb.Properties.ValidationSettings.Display = Display.Dynamic;
					tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
				});
			});
			c.Items.Add(m => m.CustomerBankAccountID, i =>
			{
				i.Caption = "Bank Account No.";
				i.NestedExtension().TextBox(tb =>
				{
					tb.Width = Unit.Percentage(100);
					tb.ShowModelErrors = true;
					tb.Properties.ValidationSettings.Display = Display.Dynamic;
					tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
				});
			});
			c.Items.Add(m => m.CustomerAccountHolder, i =>
			{
				i.Caption = "Account Holder";
				i.NestedExtension().TextBox(tb =>
				{
					tb.Width = Unit.Percentage(100);
					tb.ShowModelErrors = true;
					tb.Properties.ValidationSettings.Display = Display.Dynamic;
					tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
				});
			});
			c.Items.Add(m => m.CustomerBankName, i =>
			{
				i.Caption = "Bank Name";
				i.NestedExtension().TextBox(tb =>
				{
					tb.Width = Unit.Percentage(100);
					tb.ShowModelErrors = true;
					tb.Properties.ValidationSettings.Display = Display.Dynamic;
					tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
				});
			});
			c.Items.Add(m => m.CustomerNote, i =>
			{
				i.Caption = "Note";
				i.Width = Unit.Percentage(100);
				i.NestedExtensionType = FormLayoutNestedExtensionItemType.Memo;
				i.NestedExtensionSettings.Width = Unit.Percentage(100);
				i.NestedExtensionSettings.Height = Unit.Pixel(71);
			});
		});
		d.Items.AddGroupItem(g =>
		{
			g.ColCount = 1;
			g.RowSpan =1;
			g.Caption = "Type Invoice";
			g.Items.Add(m => m.Pattern, i =>
			{
				i.NestedExtension().TextBox(tb =>
				{
					tb.Width = Unit.Percentage(100);
					tb.ShowModelErrors = true;
					tb.Properties.ValidationSettings.Display = Display.Dynamic;
					tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
				});
			});
			g.Items.Add(m => m.Series, i =>
			{
				i.NestedExtension().TextBox(tb =>
				{
					tb.Width = Unit.Percentage(100);
					tb.ShowModelErrors = true;
					tb.Properties.ValidationSettings.Display = Display.Dynamic;
					tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
				});
			});
			g.Items.Add(m => m.No, i =>
			{
				i.NestedExtension().TextBox(tb =>
				{
					tb.Width = Unit.Percentage(100);
					tb.ShowModelErrors = true;
					tb.Properties.ValidationSettings.Display = Display.Dynamic;
					tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
				});
			});
			g.Items.Add(m => m.CreatedDate, i =>
			{
				i.NestedExtension().TextBox(tb =>
				{
					tb.Width = Unit.Percentage(100);
					tb.ShowModelErrors = true;
					tb.Properties.ValidationSettings.Display = Display.Dynamic;
					tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
				});
			});
		});

		d.Items.AddGroupItem(p =>
		{
			p.Caption = "Payment";
			p.ColCount = 1;
			p.ColCount = 1;
			p.Items.Add(m => m.Payment, i =>
			{
				i.Caption = "Payment Type";
			});
		});
	});
}).GetHtml()