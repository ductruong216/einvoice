@using DevExpress.Web.ASPxSpreadsheet.Internal
@using EInvoice.Data.Data
@using EInvoice.Web.Controllers
@using EInvoice.Web.Controllers.CategoryController
@using Unit = System.Web.UI.WebControls.Unit
@(Html.DevExpress().GridView<Customer>(settings =>
	{
		settings.Name = "Customers";
		settings.CallbackRouteValues = new { Controller = "Category", Action = "CustomerPartial" };
		settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Category", Action = "CustomerPartialAddNew" };
		settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Category", Action = "CustomerPartialUpdate" };
		settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Category", Action = "CustomerPartialDelete" };
		settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
		settings.SettingsText.CommandBatchEditUpdate = "Update";
		settings.SettingsText.CommandBatchEditCancel = "Cancel";
#region Toolbar Settings
settings.Toolbars.Add(toolbarCustomer =>
		{
			toolbarCustomer.Enabled = true;
			toolbarCustomer.Position = GridToolbarPosition.Top;
			toolbarCustomer.ItemAlign = GridToolbarItemAlign.Right;
			toolbarCustomer.Items.Add(GridViewToolbarCommand.New);
			toolbarCustomer.Items.Add(GridViewToolbarCommand.Edit);
			toolbarCustomer.Items.Add(GridViewToolbarCommand.Delete);
			toolbarCustomer.Items.Add(GridViewToolbarCommand.Refresh, true);
			toolbarCustomer.Items.Add(i =>
			{
				i.Text = "Export to";
				i.Image.IconID = DevExpress.Web.ASPxThemes.IconID.ActionsDownload16x16office2013;
				i.BeginGroup = true;
				i.Items.Add(GridViewToolbarCommand.ExportToPdf);
				i.Items.Add(GridViewToolbarCommand.ExportToXls);
				i.Items.Add(GridViewToolbarCommand.ExportToXlsx);
			});
			toolbarCustomer.Items.Add(i =>
			{
				i.BeginGroup = true;
				i.SetTemplateContent(c =>
				{
					Html.DevExpress().ButtonEdit(s =>
					{
						s.Name = "Search";
						s.Properties.NullText = "Search...";
						s.Properties.Buttons
							.Add()
							.Image.IconID = DevExpress.Web.ASPxThemes.IconID.FindFind16x16gray;
					}).Render();
				});
			});
		});
#endregion Toolbar Settings
#region Add Comlumns

settings.Columns.Add(c =>
		{
			c.FieldName = "CustomerId";
			c.Caption = "Customer Code";
			c.Width = 150;
			c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
			c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
		});

		settings.Columns.Add(c =>
		{
			c.FieldName = "Name";
			c.Width = 200;
			c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
			c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
		});

		settings.Columns.Add(c =>
		{
			c.FieldName = "Address";
			c.Width = 500;
			c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
			c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
		});

		settings.Columns.Add(c =>
		{
			c.FieldName = "EmailID";
			c.Caption = "Email";
			c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
			c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;

			c.EditorProperties().ComboBox(p =>
			{
				p.TextField = "UserName";
				p.ValueField = "EmailID";
			});

		});
		settings.Columns.Add(c =>
		{
			c.FieldName = "Phone";

			c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
			c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
		});

		settings.Columns.Add(c =>
		{
			c.FieldName = "TaxCode";
			c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
			c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
		});

#endregion
#region Numbering

settings.Init = (sender, e) =>
		{
			var c = new GridViewDataColumn() { FieldName = "Series" };
			c.UnboundType = DevExpress.Data.UnboundColumnType.Integer;
			c.VisibleIndex = 0;
			c.Width = 50;
			c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
			c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
			((MVCxGridView)sender).Columns.Add(c);
		};

		settings.CustomColumnDisplayText = (sender, e) =>
		{
			if (e.Column.FieldName == "Series")
			{
				e.DisplayText = (e.VisibleRowIndex + 1).ToString();
			}
		};
#endregion
settings.KeyFieldName = "CustomerId";
		settings.EditFormLayoutProperties.ColCount = 2;
		settings.EditFormLayoutProperties.Items.Add(i => i.CustomerId);
		settings.EditFormLayoutProperties.Items.Add(i => i.Name);
		settings.EditFormLayoutProperties.Items.Add(i => i.Address);
		settings.EditFormLayoutProperties.Items.Add(i => i.Phone);
		settings.EditFormLayoutProperties.Items.Add(i => i.EmailID);
		settings.EditFormLayoutProperties.Items.AddCommandItem(i =>
		{
			i.ColSpan = 2;
			i.HorizontalAlign = FormLayoutHorizontalAlign.Right;
		});

		settings.SettingsSearchPanel.CustomEditorName = "Search";
		settings.SettingsBehavior.AllowFocusedRow = true;
		settings.SettingsExport.EnableClientSideExportAPI = true;
		settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;
		settings.Width = Unit.Percentage(100);

		settings.SettingsPager.PageSize = 6;
	}).Bind(Model).SetEditErrorText(ViewBag.EditError).GetHtml())